import json
import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes

GUIDE_FILE = "data/guide.json"


def load_guide() -> dict:
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª—è –∏–∑ JSON-—Ñ–∞–π–ª–∞.

    Returns:
        dict: –°–ª–æ–≤–∞—Ä—å —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –∏ —Å–ø–∏—Å–∫–∞–º–∏ –º–µ—Å—Ç.
              –ü—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å, –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.
    """
    if not os.path.exists(GUIDE_FILE):
        return {}
    with open(GUIDE_FILE, "r", encoding="utf-8") as f:
        return json.load(f)


def format_phone_number(phone: str) -> str:
    """
    –ü—Ä–∏–≤–æ–¥–∏—Ç –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É –¥–ª—è –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏.

    Args:
        phone (str): –ò—Å—Ö–æ–¥–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.

    Returns:
        str: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.
    """
    phone = phone.strip()
    digits = "".join(filter(str.isdigit, phone))
    if digits.startswith("8") and len(digits) == 11:
        digits = "+7" + digits[1:]
    elif not phone.startswith("+"):
        digits = "+" + digits
    else:
        digits = phone
    return digits


async def guide_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /guide –∏–ª–∏ –≤—ã–∑–æ–≤ –º–µ–Ω—é –ø—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª—è.

    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª—è —Å –∫–Ω–æ–ø–∫–∞–º–∏.

    Args:
        update (telegram.Update): –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Telegram.
        context (telegram.ext.CallbackContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞.
    """
    guide_data = load_guide()
    if not guide_data:
        if update.callback_query:
            await update.callback_query.message.edit_text("–ü—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª—å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.")
        else:
            await update.message.reply_text("–ü—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª—å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.")
        return

    keyboard = [
        [InlineKeyboardButton(cat, callback_data=f"guide_cat|{cat}")]
        for cat in guide_data.keys()
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    if update.callback_query:
        await update.callback_query.message.edit_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª—è:",
            reply_markup=reply_markup,
        )
    else:
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª—è:",
            reply_markup=reply_markup,
        )


async def guide_category_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª—è.

    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –º–µ—Å—Ç –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏ –∏ —Å—Å—ã–ª–∫–∞–º–∏.

    Args:
        update (telegram.Update): –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Telegram.
        context (telegram.ext.CallbackContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞.
    """
    guide_data = load_guide()
    query = update.callback_query
    await query.answer()

    _, category = query.data.split("|", 1)
    places = guide_data.get(category, [])

    if not places:
        await query.edit_message_text(
            f"–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ *{category}* –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.", parse_mode="Markdown"
        )
        return

    lines = [f"üìÇ *{category}*:\n"]
    for place in places:
        name = place.get("name", "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è")
        phone = place.get("phone", "")
        address = place.get("address", "")
        description = place.get("description", "")
        links = place.get("links", [])  # —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π —Å keys: url, text

        phone_formatted = ""
        if phone:
            phone_number = format_phone_number(phone)
            phone_formatted = f"[üì± {phone}]({phone_number})"

        lines.append(f"üìå *{name}*")
        if phone_formatted:
            lines.append(phone_formatted)
        if address:
            lines.append(f"üìç {address}")

        link_texts = []
        for link in links:
            url = link.get("url")
            text = link.get("text", "–°—Å—ã–ª–∫–∞")
            if url:
                link_texts.append(f"[{text}]({url})")
        if link_texts:
            lines.append("üîó " + ", ".join(link_texts))

        if description:
            lines.append(f"‚ÑπÔ∏è _{description}_")
        lines.append("")

    keyboard = InlineKeyboardMarkup(
        [[InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="guide_back")]]
    )

    text = "\n".join(lines)
    await query.edit_message_text(
        text, parse_mode="Markdown", disable_web_page_preview=True, reply_markup=keyboard
    )


async def guide_back_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –≤ –º–µ–Ω—é –ø—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª—è.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ —Å–ø–∏—Å–∫—É –∫–∞—Ç–µ–≥–æ—Ä–∏–π.

    Args:
        update (telegram.Update): –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Telegram.
        context (telegram.ext.CallbackContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞.
    """
    query = update.callback_query
    await query.answer()
    await guide_handler(update, context)
