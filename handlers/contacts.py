import json
import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes

CONTACTS_FILE = "data/contacts.json"


def load_contacts() -> dict:
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –∏–∑ JSON-—Ñ–∞–π–ª–∞.

    Returns:
        dict: –°–ª–æ–≤–∞—Ä—å —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤.
              –ü—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å, –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.
    """
    if not os.path.exists(CONTACTS_FILE):
        return {}
    with open(CONTACTS_FILE, "r", encoding="utf-8") as f:
        return json.load(f)


async def contacts_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –ø–æ–∫–∞–∑–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤.

    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —Å –∫–Ω–æ–ø–∫–∞–º–∏.

    Args:
        update (telegram.Update): –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Telegram.
        context (telegram.ext.CallbackContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞.
    """
    contacts_data = load_contacts()
    if not contacts_data:
        if update.callback_query:
            await update.callback_query.message.edit_text("–ö–æ–Ω—Ç–∞–∫—Ç—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.")
        else:
            await update.message.reply_text("–ö–æ–Ω—Ç–∞–∫—Ç—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.")
        return

    keyboard = [
        [InlineKeyboardButton(cat, callback_data=f"contacts_cat|{cat}")]
        for cat in contacts_data.keys()
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    if update.callback_query:
        await update.callback_query.message.edit_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤:", reply_markup=reply_markup
        )
    else:
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤:", reply_markup=reply_markup
        )


async def contacts_category_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤.

    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–º–∏ –Ω–æ–º–µ—Ä–∞–º–∏.

    Args:
        update (telegram.Update): –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Telegram.
        context (telegram.ext.CallbackContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞.
    """
    contacts_data = load_contacts()
    query = update.callback_query
    await query.answer()

    _, category = query.data.split("|", 1)
    contacts = contacts_data.get(category, [])

    if not contacts:
        await query.edit_message_text(
            f"–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ *{category}* –∫–æ–Ω—Ç–∞–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.", parse_mode="Markdown"
        )
        return

    lines = [f"üìÇ *{category}*:\n"]
    for c in contacts:
        name = c.get("name", "–ë–µ–∑ –∏–º–µ–Ω–∏")
        phone = c.get("phone", "")
        info = c.get("info", "")

        phone_formatted = phone.replace(" ", "").replace("(", "").replace(")", "").replace("-", "")
        if not phone_formatted.startswith("+"):
            phone_formatted = "+" + phone_formatted

        phone_link = f"[üì± {phone}]({phone_formatted})"

        lines.append(f"üë§ *{name}*")
        lines.append(phone_link)
        if info:
            lines.append(f"‚ÑπÔ∏è _{info}_")
        lines.append("")

    keyboard = InlineKeyboardMarkup(
        [[InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="contacts_back")]]
    )

    text = "\n".join(lines)
    await query.edit_message_text(text, parse_mode="Markdown", reply_markup=keyboard)


async def contacts_back_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –≤ –º–µ–Ω—é –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ —Å–ø–∏—Å–∫—É –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤.

    Args:
        update (telegram.Update): –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Telegram.
        context (telegram.ext.CallbackContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞.
    """
    query = update.callback_query
    await query.answer()
    await contacts_handler(update, context)
